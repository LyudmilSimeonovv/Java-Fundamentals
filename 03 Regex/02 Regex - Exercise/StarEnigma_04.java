package com.company;import java.util.ArrayList;import java.util.List;import java.util.Scanner;import java.util.regex.Matcher;import java.util.regex.Pattern;import java.util.stream.Collectors;public class StarEnigma_04 {    public static void main(String[] args) {        Scanner scanner = new Scanner(System.in);        int countInput = Integer.parseInt(scanner.nextLine());        String regex = "[STARstar]";        Pattern pattern = Pattern.compile(regex);        List<String> attackPlanet = new ArrayList<>();        List<String> destroyedPlanet = new ArrayList<>();        int attackPlanetCount = 0;        int destroyedPlanetCount = 0;        for (int i = 0; i < countInput; i++) {            String command = scanner.nextLine();            Matcher matcher = pattern.matcher(command);            int countDecryptions = 0;            while (matcher.find()) {                countDecryptions++;            }            StringBuilder stringBuilder = new StringBuilder();            for (int j = 0; j < command.length(); j++) {                char currentSymbol = command.charAt(j);                char encryptedSybol = (char) (currentSymbol - countDecryptions);                stringBuilder.append(encryptedSybol);            }            String encryptedText = stringBuilder.toString();            String regexMessage = "[^@\\-!:>]*?@(?<namePlanet>[A-Z]{1}[a-z]+)[^@\\-!:>]*?:(?<populations>[0-9]+)[^@\\-!:>]*?(!)(?<attack>[AD])[^@\\-!:>]*?\\3->[^@\\-!:>]*?(?<soldierCount>[0-9]+)[^@\\-!:>]*?";            Pattern patternMessage = Pattern.compile(regexMessage);            Matcher matcherMessage = patternMessage.matcher(encryptedText);            if (matcherMessage.find()) {                String planetName = matcherMessage.group("namePlanet");                int populations = Integer.parseInt(matcherMessage.group("populations"));                String attackType = matcherMessage.group("attack");                int countSolider = Integer.parseInt(matcherMessage.group("soldierCount"));                if (attackType.equals("A")) {                    attackPlanetCount++;                    attackPlanet.add(planetName);                } else if (attackType.equals("D")) {                    destroyedPlanetCount++;                    destroyedPlanet.add(planetName);                }            }        }        System.out.printf("Attacked planets: %d", attackPlanetCount);        System.out.println();        attackPlanet.stream().sorted(String::compareTo).forEach(e -> System.out.printf("-> %s%n", e));        //forEach(e -> System.out.printf("-> %s%n",e));        System.out.printf("Destroyed planets: %d", destroyedPlanetCount);        System.out.println();        destroyedPlanet.stream().sorted(String::compareTo).forEach(e -> System.out.printf("-> %s%n", e));        //forEach(e -> System.out.printf("-> %s%n",e));    }}